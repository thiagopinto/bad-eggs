/**
 * Copyright IBM Corp. 2016, 2023
 *
 * This source code is licensed under the Apache-2.0 license found in the
 * LICENSE file in the root directory of this source tree.
 */
import PropTypes from 'prop-types';
export interface DataTableSkeletonProps {
    /**
     * Specify an optional className to add.
     */
    className?: string;
    /**
     * Specify the number of columns that you want to render in the skeleton state
     */
    columnCount: number;
    /**
     * Optionally specify whether you want the Skeleton to be rendered as a
     * compact DataTable
     */
    compact: boolean;
    /**
     * Optionally specify the displayed headers
     */
    headers?: [{
        header: string;
        key: string;
    }] | {
        header: string;
        key: string;
    };
    /**
     * Specify the number of rows that you want to render in the skeleton state
     */
    rowCount: number;
    /**
     * Specify if the table header should be rendered as part of the skeleton.
     */
    showHeader: boolean;
    /**
     * Specify if the table toolbar should be rendered as part of the skeleton.
     */
    showToolbar: boolean;
    /**
     * Optionally specify whether you want the DataTable to be zebra striped
     */
    zebra: boolean;
}
declare const DataTableSkeleton: {
    ({ headers, rowCount, columnCount, zebra, compact, className, showHeader, showToolbar, ...rest }: {
        [x: string]: any;
        headers: any;
        rowCount: any;
        columnCount: any;
        zebra: any;
        compact: any;
        className: any;
        showHeader: any;
        showToolbar: any;
    }): JSX.Element;
    propTypes: {
        /**
         * Specify an optional className to add.
         */
        className: PropTypes.Requireable<string>;
        /**
         * Specify the number of columns that you want to render in the skeleton state
         */
        columnCount: PropTypes.Requireable<number>;
        /**
         * Optionally specify whether you want the Skeleton to be rendered as a
         * compact DataTable
         */
        compact: PropTypes.Requireable<boolean>;
        /**
         * Optionally specify the displayed headers
         */
        headers: PropTypes.Requireable<NonNullable<any[] | PropTypes.InferProps<{
            key: PropTypes.Requireable<string>;
        }> | null | undefined>>;
        /**
         * Specify the number of rows that you want to render in the skeleton state
         */
        rowCount: PropTypes.Requireable<number>;
        /**
         * Specify if the table header should be rendered as part of the skeleton.
         */
        showHeader: PropTypes.Requireable<boolean>;
        /**
         * Specify if the table toolbar should be rendered as part of the skeleton.
         */
        showToolbar: PropTypes.Requireable<boolean>;
        /**
         * Optionally specify whether you want the DataTable to be zebra striped
         */
        zebra: PropTypes.Requireable<boolean>;
    };
    defaultProps: {
        rowCount: number;
        columnCount: number;
        zebra: boolean;
        compact: boolean;
        showHeader: boolean;
        showToolbar: boolean;
    };
};
export default DataTableSkeleton;
